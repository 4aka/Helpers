import java.io.*;
import java.net.InetAddress;
import java.net.UnknownHostException;
import java.nio.file.Files;
import java.util.ArrayList;
import java.util.List;
import java.util.regex.Pattern;

public class changeIP {

    public static void main(String[] args) {
        String setenvIBHome = "set IBANK_HOME=" + currentDir;
        String setenvJRE = "set JRE_HOME=" + System.getProperty("java.home");
        String setenv = currentDir + "/bin/setenv.bat";

        changeLine(setenv, "set IBANK_HOME=", "set JRE_HOME=", setenvIBHome, setenvJRE);

        File[] files = {activeMQ, server, client, makekeys, multiclient, pclient, bankeys, operator};

        for (File f : files) {
            changeIPByRegExp(f);
        }
    }

    /**
     * Change IP inside the document by regular expression.
     * Save new file.
     *
     * @param filePath set File that it is needed to change.
     */
    public static void changeIPByRegExp(File filePath) {
        FileInputStream fin = null;
        FileOutputStream fout = null;
        byte[] buffer = new byte[0];

        InetAddress inetAddress = null;
        try {
            inetAddress = InetAddress.getLocalHost();
        } catch (UnknownHostException e) {
            e.printStackTrace();
        }
        assert inetAddress != null;
        String myIP = inetAddress.getHostAddress();

        try {
            fin = new FileInputStream(filePath);
        } catch (FileNotFoundException e) {
            e.printStackTrace();
        }
        try {
            assert fin != null;
            buffer = new byte[fin.available()];
//            fin.read(buffer, 0, fin.available());
            fin.read(buffer);
            fin.close();

        } catch (IOException e) {
            e.printStackTrace();
        }
        String data = null;
        try {
            data = new String(buffer, "windows-1251");
        } catch (UnsupportedEncodingException e) {
            e.printStackTrace();
        }
        String zeroTo255 = "([01]?[0-9]{1,2}|2[0-4][0-9]|25[0-5])";
        String IP_REGEXP = zeroTo255 + "\\." + zeroTo255 + "\\."
                + zeroTo255 + "\\." + zeroTo255;

        Pattern p = Pattern.compile(IP_REGEXP);
        assert data != null;
        data = p.matcher(data).replaceAll(myIP);

        try {
            fout = new FileOutputStream(filePath.getPath());
        } catch (FileNotFoundException e) {
            e.printStackTrace();
        }
        try {
            assert fout != null;
            fout.write(data.getBytes());
            fout.close();
        } catch (IOException e) {
            e.printStackTrace();
        }
    }

    /**
     * Find file setenv.bat
     * Find lines JAVA_HOME IBANK_HOME
     * Change values
     * Save the file
     *
     * @param filePath  set file path for a document
     * @param findThis1 set value that must found
     * @param findThis2 set value that must found
     * @param putThis1  set value that must put
     * @param putThis2  set value that must put
     */
    public static void changeLine(String filePath, String findThis1, String findThis2, String putThis1, String putThis2) {
        File file = new File(filePath);
        List<String> list = new ArrayList<>();

        // read all lines from the file. Change necessary lines.
        // It works with small files and with line = null

        try {
            int size = Files.readAllLines(file.toPath()).size();
            assert size != 0;

            for (int i = 0; i < size; i++) {

                if (Files.readAllLines(file.toPath()).get(i).startsWith(findThis1)) {
                    String put = findThis1 + putThis1;
                    list.add(put);
                    continue;
                }
                if (Files.readAllLines(file.toPath()).get(i).startsWith(findThis2)) {
                    String put = findThis2 + putThis2;
                    list.add(put);
                    continue;
                }
                list.add(Files.readAllLines(file.toPath()).get(i));
            }
        } catch (IOException e) {
            e.printStackTrace();
        }

        // write new lines into the file.

        File fout = new File(filePath);
        FileOutputStream fos = null;
        BufferedWriter bw;

        try {
            fos = new FileOutputStream(fout);
        } catch (FileNotFoundException e) {
            e.printStackTrace();
        }
        assert fos != null;
        bw = new BufferedWriter(new OutputStreamWriter(fos));

        for (String s : list) {
            try {
                bw.append(s);
                bw.newLine();
            } catch (IOException e) {
                e.printStackTrace();
            }
        }

        // close

        try {
            bw.close();
        } catch (IOException e) {
            e.printStackTrace();
        }
    }

    //    static String currentDir = System.getProperty("user.dir");
    static String currentDir = "";
    static File fileA;
    static File fileB;

    // List of files that is needed to change.
    static {
        fileA = new File("");
        fileB = new File("");
    }

}
