   /**
    * Get string value from table field.
    * return String array
    */
    public String[] getSaleBankAccount() {
        Hibernate hb = new Hibernate();
        String bankAccount = "select value from TABLE"; // SQL request

        Session session = hb.getSessionFactory().openSession();

        List accListUSD;
        accListUSD = session.createSQLQuery(bankAccount).list();
        int sizeUSD = accListUSD.size();
        assert sizeUSD != 0;

        String[] accounts = new String[sizeUSD];
        Object obj;

        for (int k = 0; k < accounts.length; k++) {
            obj = accListUSD.get(k);
            assert obj != null;
            accounts[k] = obj.toString();
        }
        hb.shutdown();      // Shutdown hibernate!
        session.close();    // Close session!
        return accounts;
    }
    
   /**
    * Get int value from table field
    * return as String
    */
    public String getClientID(String clientName) {
        Hibernate hb = new Hibernate();
        Session session;

        session = hb.getSessionFactory().openSession();
        assert session != null;
        String select = "SELECT CLIENT_ID FROM CLIENTS WHERE NAME_CLN='" + clientName + "'";
        List results = null;

        results = session.createSQLQuery(select).list();
        assert results != null;

        Object objects;
        objects = results.get(0);
        assert objects != null;

        hb.shutdown();      // Shutdown hibernate!
        session.close();    // Close session!
        return objects.toString();
    }

   /**
    * Get MAX value from table field
    */
    public String getMaxValueOracle(String field, String table) {
        Hibernate hb = new Hibernate();
        Session session = hb.getSessionFactory().openSession();
        
        String select = "SELECT MAX(" + field + ") FROM " + table;
        List result;
        assert session != null;
        
        result = session.createSQLQuery(select).list();
        assert result != null;
        
        Object object;
        object = result.get(0);
        assert object != null;

        hb.shutdown();      // Shutdown hibernate!
        session.close();    // Close session!
        return object.toString();
    }
    
   /**
    * INSERT or UPDATE table. 
    */
    public void setStatementsIntoACCS_SALDO() {
        Hibernate hb;
        hb = new Hibernate();
        Session session;
        session = hb.getSessionFactory().openSession();
        assert session != null;

        try {
            session.beginTransaction();
             
            String insertStatements = "INSERT INTO TABLE(field, field, field, field, field, field) " +
                                       "values (value, value, value, value, value, value)";
            
            Query query3;
            query3 = session.createSQLQuery(insertStatements);
            assert query3 != null;
            query3.executeUpdate();

            session.getTransaction().commit();
        } catch (HibernateException e) {
            e.printStackTrace();
        }
        assert session != null;
        session.close();
        hb.shutdown();
    }
